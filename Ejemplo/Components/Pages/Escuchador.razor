@implements IDisposable
@inject MediatorService Mediador

<h3>Escuchador</h3>

<!-- Modal -->
@if (MostrarModal)
{
    <div class="modal fade show d-block" tabindex="-1" role="dialog" style="background-color: rgba(0,0,0,0.5);">
        <div class="modal-dialog modal-dialog-centered" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">📢 Mensaje recibido</h5>
                    <button type="button" class="btn-close" @onclick="CerrarModal"></button>
                </div>
                <div class="modal-body">
                    <p>@Mensaje</p>
                </div>
                <div class="modal-footer">
                    <button class="btn btn-secondary" @onclick="CerrarModal">Cerrar</button>
                </div>
            </div>
        </div>
    </div>
}

@code {
    private string Mensaje = "";
    private bool MostrarModal = false;

    protected override void OnInitialized()
    {
        Mediador.OnNotificar += MostrarMensaje;
    }

    void MostrarMensaje(string mensaje)
    {
        Mensaje = mensaje;
        MostrarModal = true;
        InvokeAsync(StateHasChanged);
    }

    void CerrarModal()
    {
        MostrarModal = false;
    }

    public void Dispose()
    {
        Mediador.OnNotificar -= MostrarMensaje;
    }
}
